extends c, algorithms_cpp

snippet maincpp maincpp
    #include <bits/stdc++.h>

    int main(int argc, char * argv[]){
        $0
        return 0;
    }

snippet class
  class $1 {
      $0
  };

snippet map
  unordered_map<$1, $2> $0;

snippet vv
  vector<vector<$1>> $0;

snippet vvv
  vector<vector<vector<$1>>> $0;

snippet sortall
  sort($0.begin(), $0.end());

snippet afor
    for(auto &$1: $2){
    	$0
    }

snippet sfor
    for(size_t $1 = 0, size = $2.size(); $1 < size; ++$1){
    	$0
    }

snippet itfor
	for(auto $1 = $2.begin(); $1 != $2.end(); ++$1){
		$0
	}

snippet itrev
	for(auto $1 = $2.rbegin(); $1 != $2.rend(); ++$1){
		$0
	}

snippet time_measurement
	#define measure_time std::chrono::system_clock::time_point ___t1, ___t2;
	#define startclock ___t1 = std::chrono::high_resolution_clock::now()
	#define endclock ___t2 = std::chrono::high_resolution_clock::now()
	#define printduration                                                          \
		std::cout << std::fixed;                                                   \
		std::cout << "execution time: "                                            \
				  << "\033[31m"                                                    \
				  << std::chrono::duration_cast<std::chrono::microseconds>(___t2 - \
																		   ___t1)  \
							 .count() /                                            \
						 1000000.0                                                 \
				  << "\033[0m"                                                     \
				  << " seconds\n";                                                 \
		std::cout << std::scientific;
